// lib/core/di/service_locator.dart
import 'package:dio/dio.dart';
import 'package:get_it/get_it.dart';
import 'package:injectable/injectable.dart';
import 'service_locator.config.dart';

final getIt = GetIt.instance;

@InjectableInit(
  initializerName: 'init', //–Ω–∞–∑–≤–∞–ª–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é init()
  preferRelativeImports: true, //–∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤–º–µ—Å—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö 
  asExtension: false, //–æ—Ç–∫–ª—é—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –º–µ—Ç–æ–¥–∞ –∫–∞–∫ extension-–º–µ—Ç–æ–¥–∞ –¥–ª—è GetIt
)


void configureDependencies() {
  getIt.registerSingleton<Dio>(Dio()); //—è –æ—Ç–¥–µ–ª—å–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É—é –î–∏–æ
  init(getIt);
} 

//–ë–µ–∑ Injectable –±—ã–ª–æ –±—ã —Ç–∞–∫:
//void configureDependencies() {
//   // 1. Dio (–¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–µ—Ç—å—é)
//   getIt.registerSingleton<Dio>(Dio());

//   // 2. API –∫–ª–∏–µ–Ω—Ç (Retrofit)
//   getIt.registerSingleton<NumberApi>(
//     NumberApi(getIt<Dio>()),
//   );

//   // 3. —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
//   getIt.registerSingleton<NumberRepository>(
//     NumberRepositoryImpl(getIt<NumberApi>()),
//   );

//   // 4. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º WidgetModelFactory
//   getIt.registerFactory<NumbersWidgetModel>(
//     () => NumbersWidgetModel(
//       NumbersModel(),
//       getIt<NumberRepository>(),
//     ),
//   );
// }


// –ê—Å–ø–µ–∫—Ç	          –ë–µ–∑ get_it	                          –° get_it
// –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è	    –†—É—á–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π	        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —á–µ—Ä–µ–∑ injectable
// –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ	    –°–ª–æ–∂–Ω–æ–µ (–ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã)	  –ü—Ä–æ—Å—Ç–æ–µ (–ø–æ–¥–º–µ–Ω–∞ —á–µ—Ä–µ–∑ registerOverride)
// –í–∏–¥–∂–µ—Ç—ã	        –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã	      –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ WidgetModel
// –í—Ä–µ–º—è –∂–∏–∑–Ω–∏	    –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é	              –ß—ë—Ç–∫–∏–µ –ø—Ä–∞–≤–∏–ª–∞ (singleton/factory)
// –ì–∏–±–∫–æ—Å—Ç—å	        –¢—Ä–µ–±—É–µ—Ç —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π	  –ú–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ runtime


  //TODO Dependency Injection 
  //- —ç—Ç–æ —Ç–µ—Ö–Ω–∏–∫–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –æ–±—ä–µ–∫—Ç—ã –ø–æ–ª—É—á–∞—é—Ç —Å–≤–æ–∏ 
  // –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑–≤–Ω–µ, –∞ –Ω–µ —Å–æ–∑–¥–∞—é—Ç –∏—Ö —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ. 
  // –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–æ–¥ –±–æ–ª–µ–µ –º–æ–¥—É–ª—å–Ω—ã–º –∏ —É–ø—Ä–æ—â–∞–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.

  //   –ü—Ä–∏–º–µ—Ä –±–µ–∑ DI: 
    //   final Database _db = Database(); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Å–æ–∑–¥–∞—ë—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞
    //   void getUser() {
    //     _db.query('...');
    //   }
  // –ï—Å–ª–∏ –∑–∞–≤—Ç—Ä–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –¥—Ä—É–≥–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, —Ç–æ –ø—Ä–∏–¥–µ—Ç—Å—è –º–Ω–æ–≥–æ–µ –º–µ–Ω—è—Ç—å –≤ –∫–ª–∞—Å—Å–µ

  //   –ü—Ä–∏–º–µ—Ä —Å DI:
    //   final Database _db;
    //   UserService(this._db); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –≤–Ω–µ–¥—Ä—è–µ—Ç—Å—è –∏–∑–≤–Ω–µ
    //   void getUser() {
    //     _db.query('...');
    //   }
  // –¢–µ–ø–µ—Ä—å –∫–ª–∞—Å—Å—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å –ª—é–±—É—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –ø–æ–¥—Ö–æ–¥—è—â—É—é –ø–æ–¥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è. 

  // get_it -  —Å–µ—Ä–≤–∏—Å-–ª–æ–∫–∞—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏. –í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ get_it - 
  // —ç—Ç–æ –Ω–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ DI. –≠—Ç–æ –∫–∞–∫ –∫–æ—Ä–æ–±–∫–∞ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π LEGO. –í–º–µ—Å—Ç–æ —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å 
  // –∫–∞–∂–¥—É—é –¥–µ—Ç–∞–ª—å –≤—Ä—É—á–Ω—É—é, –º—ã –∫–ª–∞–¥—ë–º –∏—Ö –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (get_it), –æ—Ç–∫—É–¥–∞ –∏—Ö –º–æ–∂–Ω–æ –¥–æ—Å—Ç–∞—Ç—å –∫–æ–≥–¥–∞ —É–≥–æ–¥–Ω–æ. 
  
  // –†–∞–∑–Ω–∏—Ü–∞ DI –∏ get_it:
    // DI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–Ω–µ–¥—Ä—è–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä/–º–µ—Ç–æ–¥—ã
    // Service Locator –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, –æ—Ç–∫—É–¥–∞ –º–æ–∂–Ω–æ 
    // –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  //   –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:
    // 1. –°–æ–∑–¥–∞—ë–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ:
      // final GetItBox = GetIt.instance;
    // 2. –ö–ª–∞–¥—ë–º –≤–µ—â–∏ –≤ –∫–æ—Ä–æ–±–∫—É:
      // A) –ö–ª–∞–¥—ë–º –æ–¥–Ω—É –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –Ω–∞ –≤–µ—Å—å –∫–ª–∞—Å—Å (—Å–∏–Ω–≥–ª—Ç–æ–Ω)
      // GetItBox.registerSingleton<DependencyName>(DependencyName());
      // B) –ò–ª–∏ –≥–æ–≤–æ—Ä–∏–º "–∫–∞–∫ –ø–æ–ø—Ä–æ—Å–∏—à—å - —Ç–æ–≥–¥–∞ —Å–¥–µ–ª–∞—é" (–ª–µ–Ω–∏–≤—ã–π —Å–∏–Ω–≥–ª—Ç–æ–Ω)
      // GetItBox.registerLazySingleton<DependencyName>(() => DependencyName());
      // C) –ò–ª–∏ "–∫–∞–∂–¥—ã–π —Ä–∞–∑ –¥–∞–≤–∞–π –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" (—Ñ–∞–±—Ä–∏–∫–∞)
      // GetItBox.registerFactory<DependencyName>(() => DependencyName());
    // 3. –î–æ—Å—Ç–∞—ë–º –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ:
      // final dependencyName = GetItBox.get<DependencyName>();

//   Q: –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–±—Ä–∏–∫—É, –∫–æ–≥–¥–∞ —Å–∏–Ω–≥–ª—Ç–æ–Ω? 
// 1Ô∏è‚É£ –°–∏–Ω–≥–ª—Ç–æ–Ω (registerSingleton) ‚Äî "–û–¥–∏–Ω –Ω–∞ –≤—Å–µ—Ö"
// API-–∫–ª–∏–µ–Ω—Ç, –ì–ª–æ–±–∞–ª—å–Ω—ã–π State, –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
// –û–±—ä–µ–∫—Ç –¥–æ–ª–∂–µ–Ω –∂–∏—Ç—å –≤—Å—ë –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// –û–±—ä–µ–∫—Ç —Ç—è–∂—ë–ª—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, API-–∫–ª–∏–µ–Ω—Ç, –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
// –û–±—ä–µ–∫—Ç —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫—ç—à, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)
// 2Ô∏è‚É£ –§–∞–±—Ä–∏–∫–∞ (registerFactory) ‚Äî "–ù–æ–≤—ã–π –∫–∞–∂–¥—ã–π —Ä–∞–∑"
// –ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–∫—É–ø–æ–∫, –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö, ViewModel 
// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
// –û–±—ä–µ–∫—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –∑–∞–Ω–æ–≤–æ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ
// –û–±—ä–µ–∫—Ç –ª—ë–≥–∫–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, DTO, ViewModel)
// –û–±—ä–µ–∫—Ç –Ω–µ —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ 
// –¢–∏–ø —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏	–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?	                       –ü—Ä–∏–º–µ—Ä—ã
// Singleton	      –û–¥–∏–Ω –æ–±—ä–µ–∫—Ç –Ω–∞ –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ	             API, Database, UserSession
// Factory	        –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ	           ShoppingCart, Order, ViewModel
// LazySingleton	  –°–æ–∑–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏	 Analytics, HeavyService

// –¢—Ä–∏ –ø–æ–¥—Ö–æ–¥–∞
// 1Ô∏è‚É£ –ë–µ–∑ DI (–ø—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π)
// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
// –û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã (1-2 —ç–∫—Ä–∞–Ω–∞)
// –ü—Ä–æ—Å—Ç—ã–µ —É—Ç–∏–ª–∏—Ç—ã/—Ö–µ–ª–ø–µ—Ä—ã –±–µ–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
// –û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ –æ–±—ä–µ–∫—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, DateTime.now() –≤ –º–µ—Ç–æ–¥–µ)
// 2Ô∏è‚É£ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π DI (–≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä)
// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
// –ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ (—Å–µ—Ä–≤–∏—Å—ã, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏)
// –ö–ª–∞—Å—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
// 3Ô∏è‚É£ get_it (—Å–µ—Ä–≤–∏—Å-–ª–æ–∫–∞—Ç–æ—Ä)
// –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã (Auth, API, Analytics)
// Flutter-–≤–∏–¥–∂–µ—Ç—ã (–≥–¥–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã)
// –ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º "–∏–∑ –≥–ª—É–±–∏–Ω—ã" –∫–æ–¥–∞

// üîç –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É registerSingleton –∏ registerLazySingleton –≤ get_it
// –û–±–∞ —Å–æ–∑–¥–∞—é—Ç –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä –Ω–∞ –≤—Å—ë –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –Ω–æ —Ä–∞–∑–Ω–∏—Ü–∞ ‚Äî –≤ –º–æ–º–µ–Ω—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
  // 1Ô∏è‚É£ registerSingleton ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å—Ä–∞–∑—É
    // getIt.registerSingleton<ApiClient>(ApiClient());
  // –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
  // –û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞—ë—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
  // –ó–∞–Ω–∏–º–∞–µ—Ç –ø–∞–º—è—Ç—å —Å –º–æ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
  // –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
  // –û–±—ä–µ–∫—Ç –Ω—É–∂–µ–Ω —Å—Ä–∞–∑—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, Router, Config).
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±—ã—Å—Ç—Ä–∞—è (–Ω–µ—Ç –¥–æ–ª–≥–æ–π –∑–∞–≥—Ä—É–∑–∫–∏).
  //
  // 2Ô∏è‚É£ registerLazySingleton ‚Äî —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ
    // getIt.registerLazySingleton<AnalyticsService>(() => AnalyticsService());
  // –ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç:
  // –û–±—ä–µ–∫—Ç —Å–æ–∑–¥–∞—ë—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º getIt.get<Service>().
  // –ù–µ —Ç—Ä–∞—Ç–∏—Ç —Ä–µ—Å—É—Ä—Å—ã, –ø–æ–∫–∞ –Ω–µ –Ω—É–∂–µ–Ω.
  // –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
  // –û–±—ä–µ–∫—Ç —Ç—è–∂—ë–ª—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –ë–î).
  // –ù—É–∂–µ–Ω –Ω–µ —Å—Ä–∞–∑—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏).
    //   –ü—Ä–∏–º–µ—Ä:
     // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º, –Ω–æ –Ω–µ —Å–æ–∑–¥–∞—ë–º —Å—Ä–∞–∑—É
    // getIt.registerLazySingleton<Database>(() => Database());
     // –ì–¥–µ-—Ç–æ –ø–æ–∑–∂–µ –≤ –∫–æ–¥–µ (–ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ):
    // final db = getIt.get<Database>(); 

  //    –ß—Ç–æ —Ç–∞–∫–æ–µ injectable –∏ –∑–∞—á–µ–º –æ–Ω –Ω—É–∂–µ–Ω?
  // Injectable ‚Äî —ç—Ç–æ –∫–æ–¥–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è get_it, –∫–æ—Ç–æ—Ä—ã–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
  // –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π. –í–º–µ—Å—Ç–æ —Ä—É—á–Ω–æ–≥–æ –ø—Ä–æ–ø–∏—Å—ã–≤–∞–Ω–∏—è registerSingleton/registerFactory 
  // –æ–Ω –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π.
  // –ë—ã–ª–æ (–±–µ–∑ injectable)
  //   void setupGetIt() {
  //     getIt.registerSingleton<Database>(Database());
  //     getIt.registerSingleton<UserRepository>(
  //       UserRepository(getIt.get<Database>()), // –í—Ä—É—á–Ω—É—é –ø–µ—Ä–µ–¥–∞—ë–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å
  //     );
  //   }
  // –°—Ç–∞–ª–æ (—Å injectable)
  //   @singleton
  //   class Database {}
  //   @injectable
  //   class UserRepository {
  //     final Database db;
  //     UserRepository(this.db); // –í—Å—ë —Ä–∞–∑—Ä–µ—à–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
  //   }
